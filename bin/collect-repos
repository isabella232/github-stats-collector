#!/usr/bin/env node
const repo = require("../lib/repo");
const program = require('commander');
const fs = require('fs');

program
  .option('-u, --user [username]', 'Get repos for user')
  .option('-o, --output [file]', 'JSON file containing the repos')
  .option('--fork', 'Include forked repos as well')
  .parse(process.argv);

if(!process.env.GITHUB_ACCESS_TOKEN) {
  console.error('GITHUB_ACCESS_TOKEN not set to a valid GitHub access token')
  program.outputHelp();
}

if (program.user && program.output) {
  repo.getRepos(program.user, (err, repos) => {
    if(err) throw err;

    if (!program.fork) {
      repos = repos.filter((repo) => !repo.fork);
    }
    repos.forEach((repo) => {
      fs.appendFile(program.output, JSON.stringify(repo) + '\n', (err) => {
        if (err) throw err;
        console.log(`${repo.full_name} created at ${new Date(repo.created_at).toLocaleDateString()} is ${repo.private ? 'private' : 'public'}`);
      });
    });
    console.log('Collected ', repos.length, 'repos');
  });
} else {
  program.outputHelp();
}
